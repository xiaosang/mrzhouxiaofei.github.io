[{"title":"摔跤吧 爸爸","url":"http://mrzhouxiaofei.com/2017/07/17/摔跤吧 爸爸/","content":"<p><img src=\"https://gss1.bdstatic.com/9vo3dSag_xI4khGkpoWK1HF6hhy/baike/c0%3Dbaike80%2C5%2C5%2C80%2C26/sign=5beba2f65d2c11dfcadcb771024e09b5/ae51f3deb48f8c54addca03a30292df5e0fe7f93.jpg\" alt=\"\"></p>\n<p>今天下午，小组组织观看了印度电影《摔跤吧 爸爸》，之后进行了亲切而友好的讨论，花了一整个下午的时间，收获颇丰。</p>\n<p>电影讲述了一个全国摔跤冠军，为生活所迫，放弃运动生涯，转而希望培养自己的儿子，无奈生了四个女儿，偶然间发现两个女儿拥有摔跤天赋，继而培养自己的两个女儿成为女子摔跤冠军，打破印度传统的励志故事。这个电影属于那种你看了开头就基本能猜到结局的电影，然而却能做到全程无尿点，让你痴迷于演员的演技，实属不易。</p>\n<p>看完整部电影，给我留下深刻印象的莫过于电影中的音乐了，尽管语言不通，但是适时响起的音乐，还是让我产生了共鸣。在我的印象中，经典的电影不仅仅是故事好，演员演技棒，而且音乐也一定很不错，这部电影满足了我对经典的要求。</p>\n<p>电影中的父亲，梦想着有一天能获得世界摔跤冠军，为印度赢得一块金牌，后来经历一系列的事，转而开始培养自己的两个女儿。在印度那样一个女人露腿都会被人议论纷纷的社会中，可想而知，父亲和两个女儿受到的阻力是巨大的。然而父亲坚定的信念，对金牌的执著，以及两个女儿在听到女伴结婚时说的话之后的顿悟，都是对冲破阻力最大的帮助。在经历一番之后，最终，两个女儿都获得了世界摔跤冠军。</p>\n<p>电影中的父亲为什么对金牌有那么深的执念？其实了解一下印度就知道了，印度一直要成为一个大国，而且随着近年来的高速发展，确实也取得了重大的成就，在一些重要的场合也有了一定的话语权。可是，一到大型的国际运动赛事，印度人就集体消失了，这对于一个大国来说，恐怕是不合适的。曾经我们也是这样，还记得李宁“兵败汉城”之后，甚至有人直接给他寄刀子。我们经过数十年的发展，甚至直到 2008 年奥运会之后，才不再唯金牌论，而是开始关注运动员本身。这样才会有傅园慧，宁泽涛，尽管没有在奥运会上获得金牌，却依然受到大家的喜爱的运动员。对于印度来说，想要度过这样一个阶段，恐怕还需要一些时间。</p>\n<p>电影上映之后，票房尚好，口碑也很不错，然而却有一些不同的声音。比如批评父亲的专权，批评父亲为了让女儿实现自己的梦想，强迫她们做自己不喜欢的事，没有让她们选择自己的未来。其实我们这样说是不合适的，你没有站在那样一个社会中，只是靠了解和倾听，是永远也感受不到的。讲个真事，有一个人早年间逃荒到了黑龙江一个偏远的山村，后来生了七个女儿一个儿子，这个人懂得一点文化，知道知识的重要。于是逼迫孩子们读书，孩子们不听话时，甚至不惜体罚，后来孩子们都考上了大学，离开了山村。女儿们后来谈起父亲，依然会说父亲残忍，专权，不给她们自由，可是却没有一个人埋怨父亲。讲这个例子，可能不太合适，毕竟逼迫孩子们读书和逼迫女儿去练摔跤是不能相提并论的。但是在电影中却是最合适的，首先两个女儿并没有一个明确的目标，如果不是父亲的干预，可能上几年学，然后在十四岁的时候嫁给一个素未谋面的男人；其次他们的父亲曾经是全国摔跤冠军，这是一个极大的资源，父亲有着丰富的经验，能给她们最合适的指导。如果说父亲只是为实现自己的梦想，把女儿当作实现梦想的工具，那么在女儿不听话时，就应该会有体罚的桥段。在电影中，完全没有这样的情节，甚至最生气的一次，女儿去参加别人的婚礼，也只是打了大侄子一巴掌。最重要的是，父亲也定了一年之约，如果一年后，女儿们还没爱上摔跤，就永远放弃。由此可见，父亲是深深的爱着女儿，并尊重她们的选择，所谓专权，是不成立的。</p>\n<p>电影之外：饰演父亲的阿米尔 汗，是印度国宝级演员，不仅主演了多部经典的电影，而且一直致力于公益等社会事业，印度有他，国之甚兴。<br><br><br>    </p>\n","categories":["随笔"],"tags":["影评"]},{"title":"JavaScript 中的数组函数","url":"http://mrzhouxiaofei.com/2017/06/10/JavaScript 中的数组函数/","content":"<p><em>JavaScript 中也有很多数组函数：</em></p>\n<p>indexOf()<br>搜索一个指定的元素的位置<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> a = [<span class=\"string\">'java'</span>,<span class=\"string\">'php'</span>,<span class=\"string\">'js'</span>];</div><div class=\"line\">alert(a.indexOf(<span class=\"string\">'php'</span>)); <span class=\"comment\">// 返回 1</span></div></pre></td></tr></table></figure></p>\n<p>slice()<br>截取数组的部分元素，返回一个新数组<br>该函数类似字符串函数中的 slice()<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> a = [<span class=\"string\">'java'</span>,<span class=\"string\">'php'</span>,<span class=\"string\">'js'</span>];</div><div class=\"line\">alert(a.slice(<span class=\"number\">1</span>,<span class=\"number\">2</span>)); <span class=\"comment\">// 返回 php</span></div></pre></td></tr></table></figure></p>\n<p>push() pop()<br>向数组末尾添加一个或多个元素，删除数组最后一个元素<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> a = [<span class=\"string\">'java'</span>,<span class=\"string\">'php'</span>];</div><div class=\"line\">alert(a.push(<span class=\"string\">'js'</span>)); <span class=\"comment\">// 返回 3</span></div><div class=\"line\">alert(a.pop()); <span class=\"comment\">//返回 js</span></div></pre></td></tr></table></figure></p>\n<p>unshift() shift()<br>向数组头部添加一个或多个元素，删除并返回第一个元素<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> a = [<span class=\"string\">'java'</span>,<span class=\"string\">'php'</span>];</div><div class=\"line\">alert(a.unshift(<span class=\"string\">'js'</span>)); <span class=\"comment\">// 返回 3</span></div><div class=\"line\">alert(a.shift()); <span class=\"comment\">//返回 js</span></div></pre></td></tr></table></figure></p>\n<p>sort()<br>对数组的元素进行排序<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> a = [<span class=\"string\">'mysql'</span>,<span class=\"string\">'php'</span>,<span class=\"string\">'js'</span>];</div><div class=\"line\">alert(a.sort()); <span class=\"comment\">// 返回 js,mysql,php</span></div></pre></td></tr></table></figure></p>\n<p>reverse()<br>颠倒数组中的元素<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> a = [<span class=\"string\">'java'</span>,<span class=\"string\">'php'</span>,<span class=\"string\">'js'</span>];</div><div class=\"line\">alert(a.reverse()); <span class=\"comment\">// 返回 js,php,java</span></div></pre></td></tr></table></figure></p>\n<p>splice()<br>从指定的索引开始删除若干元素，然后再从该位置添加若干元素<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> a = [<span class=\"string\">'java'</span>,<span class=\"string\">'php'</span>,<span class=\"string\">'js'</span>];</div><div class=\"line\">a.splice(<span class=\"number\">1</span>,<span class=\"number\">0</span>,<span class=\"string\">'mysql'</span>); </div><div class=\"line\">alert(a); <span class=\"comment\">// 返回 java,mysql,php,js</span></div></pre></td></tr></table></figure></p>\n<p>concat()<br>连接两个或多个数组，返回新数组<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> a = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>];</div><div class=\"line\"><span class=\"keyword\">var</span> b = [<span class=\"number\">4</span>,<span class=\"number\">5</span>];</div><div class=\"line\">alert(a.concat(b)); <span class=\"comment\">//返回 1,2,3,4,5</span></div></pre></td></tr></table></figure></p>\n<p>join()<br>将数组中每个元素都用指定的字符串连接起来，返回新字符串<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> a = [<span class=\"string\">'java'</span>,<span class=\"string\">'php'</span>,<span class=\"string\">'js'</span>];</div><div class=\"line\">alert(a.join(<span class=\"string\">\"-\"</span>)); <span class=\"comment\">//返回 java-php-js</span></div></pre></td></tr></table></figure></p>\n<p><br><br></p>\n","categories":["前端"],"tags":["JavaScript"]},{"title":"JavaScript 中常用的字符串函数","url":"http://mrzhouxiaofei.com/2017/06/03/JavaScript 中常用的字符串函数/","content":"<p><em>JavaScript 中有很多字符串函数，其中一些较常用的总结如下：</em></p>\n<p>toUpperCase()<br>把一个字符串全部转换为大写</p>\n<p>toLowerCase()<br>把一个字符串全部转换为小写</p>\n<p>charAt(index)<br>返回指定位置的字符<br>Js 没有字符数据类型，即 char 类型，所以返回的字符是长度为 1 的字符串<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"string\">'Hello,world'</span>;</div><div class=\"line\">alert(a.charAt(<span class=\"number\">0</span>));  <span class=\"comment\">//返回 H</span></div></pre></td></tr></table></figure></p>\n<p>concat()<br>用于连接两个或多个字符串<br>通常使用 “+” 运算符会更简便一些<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"string\">'Hello'</span>;</div><div class=\"line\"><span class=\"keyword\">var</span> b = <span class=\"string\">','</span>;</div><div class=\"line\"><span class=\"keyword\">var</span> c = <span class=\"string\">'world'</span></div><div class=\"line\">alert(a.concat(b,c)); <span class=\"comment\">//返回 Hello,world</span></div></pre></td></tr></table></figure></p>\n<p>indexOf()<br>返回某个指定的字符串值在字符串中首次出现的位置<br>若未找到，返回 -1<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"string\">'Hello,world'</span>;</div><div class=\"line\">alert(a.indexOf(<span class=\"string\">'l'</span>)); <span class=\"comment\">//返回 2</span></div></pre></td></tr></table></figure></p>\n<p>match()<br>可在字符串内检索指定的值，或找到一个或多个正则表达式的匹配<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"string\">'Hello,world'</span>;</div><div class=\"line\">alert(a.match(<span class=\"string\">'world'</span>)); <span class=\"comment\">//返回 world</span></div><div class=\"line\">alert(a.match(<span class=\"string\">'WORLD'</span>)); <span class=\"comment\">//返回 null</span></div></pre></td></tr></table></figure></p>\n<p>replace()<br>用于在字符串中用一些字符替换另一些字符，或替换一个与正则表达式匹配的子串<br>该函数功能强大<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"string\">'Hello,world'</span>;</div><div class=\"line\">alert(a.replace(<span class=\"regexp\">/world/</span>,<span class=\"string\">'JavaScript'</span>)); <span class=\"comment\">//返回 Hello,JavaScript</span></div></pre></td></tr></table></figure></p>\n<p>search()<br>用于检索字符串中指定的子字符串，或检索与正则表达式相匹配的子字符串<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"string\">'Hello,world'</span>;</div><div class=\"line\">alert(a.search(<span class=\"regexp\">/world/</span>)); <span class=\"comment\">//返回 6</span></div><div class=\"line\">alert(a.search(<span class=\"regexp\">/WORLD/</span>)); <span class=\"comment\">//返回 -1</span></div><div class=\"line\">alert(a.search(<span class=\"regexp\">/WORLD/i</span>)); <span class=\"comment\">//返回 6</span></div></pre></td></tr></table></figure></p>\n<p>split()<br>用于把一个字符串分割成字符串数组<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"string\">'Hello'</span>;</div><div class=\"line\">alert(a.split(<span class=\"string\">\"\"</span>));  <span class=\"comment\">//返回 H,e,l,l,o</span></div></pre></td></tr></table></figure></p>\n<h3 id=\"三个分割字符串函数\"><a href=\"#三个分割字符串函数\" class=\"headerlink\" title=\"三个分割字符串函数\"></a>三个分割字符串函数</h3><p>slice()<br>提取字符串的某个部分，并以新的字符串返回被提取的部分<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"string\">'Hello,world'</span>;</div><div class=\"line\">alert(a.slice(<span class=\"number\">6</span>)); <span class=\"comment\">//返回 world</span></div><div class=\"line\">alert(a.slice(<span class=\"number\">6</span>,<span class=\"number\">10</span>)); <span class=\"comment\">//返回 worl</span></div></pre></td></tr></table></figure></p>\n<p>substring()<br>用于提取字符串中介于两个指定下标之间的字符<br>该函数不接受负的参数<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"string\">'Hello,world'</span>;</div><div class=\"line\">alert(a.substring(<span class=\"number\">6</span>)); <span class=\"comment\">//返回 world</span></div><div class=\"line\">alert(a.substring(<span class=\"number\">6</span>,<span class=\"number\">10</span>)); <span class=\"comment\">//返回 worl</span></div></pre></td></tr></table></figure></p>\n<p>substr()<br>可在字符串中抽取从 start 下标开始的指定数目的字符<br>ECMAscript 没有对该方法进行标准化，因此反对使用它<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"string\">'Hello,world'</span>;</div><div class=\"line\">alert(a.substr(<span class=\"number\">6</span>,<span class=\"number\">5</span>)); <span class=\"comment\">//返回 world</span></div></pre></td></tr></table></figure></p>\n<p>slice()、substring() 和 substr() （不建议使用）都可返回字符串的指定部分。slice() 比 substring() 要灵活一些，因为它允许使用负数作为参数。slice() 与 substr() 有所不同，因为它用两个字符的位置来指定子串，而 substr() 则用字符位置和长度来指定子串。<br><br><br></p>\n","categories":["前端"],"tags":["JavaScript"]},{"title":"PHP实现邮件发送(PHPMailer+QQ邮箱)","url":"http://mrzhouxiaofei.com/2017/03/13/PHP实现邮件发送(PHPMailer+QQ邮箱)/","content":"<p>最近复习原生PHP，看到邮件函数这一部分，就试着写一下邮件功能，在网上搜了一下，主要有两种实现方式：<br>    　　<strong>1.PHP自带的mail()函数</strong><br>    　　<strong>2.封装的smtp邮件发送类</strong><br>下面来一一介绍</p>\n<h3 id=\"PHP自带的mail-函数\"><a href=\"#PHP自带的mail-函数\" class=\"headerlink\" title=\"PHP自带的mail()函数\"></a><strong>PHP自带的mail()函数</strong></h3><p>浏览一下PHP文档，mail()函数的注释如下：<br><img src=\"http://img.blog.csdn.net/20170311144907107?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvemhvdXhpYW9mZWkxOTk2/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"\"><br>即若要使用mail()函数，需要本地安装一个邮件系统或者必须设置一台不需要中继的邮件发送服务器，但现在要找到一台不需要身份验证的邮件发送中继几乎不可能，所以使用mail()函数往往无法成功发送电子邮件，对使用邮件系统感兴趣的，可以自己研究。而使用封装的smtp邮件发送类来实现，则要方便的多。</p>\n<h3 id=\"封装的smtp邮件发送类\"><a href=\"#封装的smtp邮件发送类\" class=\"headerlink\" title=\"封装的smtp邮件发送类\"></a><strong>封装的smtp邮件发送类</strong></h3><p>封装的smtp邮件发送类，网上可以找到很多，其中开源的 PHPMailer 是其中比较流行的一个，只需简单配置，即可使用，想了解更多，请移步 <a href=\"http://baike.baidu.com/link?url=gK7jI0Z90YK7TgX-dbAtjva9_5K3J119D2Q2T8zfZY24AC1Q5oWduRHzTPwJiPV7SEQ3MCFtURg4GXb-Dzh8rdit8iiawGyIR9fK8tNCxZ_\" target=\"_blank\" rel=\"external\">PHPMailer</a> PHPMailer开源地址:<a href=\"https://github.com/PHPMailer/PHPMailer\" target=\"_blank\" rel=\"external\">https://github.com/PHPMailer/PHPMailer</a><br>可以直接把项目 clone 下来，或者下载 zip 压缩文件，在配置之前，需要开启邮箱的 smtp 功能，这里以QQ邮箱为例：<br>登录QQ邮箱，点击<strong>设置</strong><br><img src=\"http://img.blog.csdn.net/20170311155901248?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvemhvdXhpYW9mZWkxOTk2/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"这里写图片描述\"><br><strong>账户</strong><br><img src=\"http://img.blog.csdn.net/20170311155920354?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvemhvdXhpYW9mZWkxOTk2/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"这里写图片描述\"><br>拉到最后，找到<br><img src=\"http://img.blog.csdn.net/20170311160214608?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvemhvdXhpYW9mZWkxOTk2/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"这里写图片描述\"><br>根据提示，开启前两项服务，然后生成授权码，记下来，之后配置会用<br><img src=\"http://img.blog.csdn.net/20170311160448283?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvemhvdXhpYW9mZWkxOTk2/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"这里写图片描述\"></p>\n<p>clone 下来的 PHPMailer 项目的 README 文件提供了一个简单的引入例子<br><strong>A Simple Example</strong></p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&lt;?php</span></div><div class=\"line\"><span class=\"keyword\">require</span> <span class=\"string\">'PHPMailerAutoload.php'</span>;</div><div class=\"line\">$mail = <span class=\"keyword\">new</span> PHPMailer;</div><div class=\"line\"><span class=\"comment\">//$mail-&gt;SMTPDebug = 3;  // Enable verbose debug output</span></div><div class=\"line\"></div><div class=\"line\">$mail-&gt;isSMTP();  <span class=\"comment\">// Set mailer to use SMTP</span></div><div class=\"line\">$mail-&gt;Host = <span class=\"string\">'smtp1.example.com;smtp2.example.com'</span>;  <span class=\"comment\">// Specify main and backup SMTP servers</span></div><div class=\"line\">$mail-&gt;SMTPAuth = <span class=\"keyword\">true</span>;   <span class=\"comment\">// Enable SMTP authentication</span></div><div class=\"line\">$mail-&gt;Username = <span class=\"string\">'user@example.com'</span>;  <span class=\"comment\">// SMTP username</span></div><div class=\"line\">$mail-&gt;Password = <span class=\"string\">'secret'</span>;  <span class=\"comment\">// SMTP password</span></div><div class=\"line\">$mail-&gt;SMTPSecure = <span class=\"string\">'tls'</span>;  <span class=\"comment\">// Enable TLS encryption, `ssl` also accepted</span></div><div class=\"line\">$mail-&gt;Port = <span class=\"number\">587</span>;  <span class=\"comment\">// TCP port to connect to</span></div><div class=\"line\"></div><div class=\"line\">$mail-&gt;setFrom(<span class=\"string\">'from@example.com'</span>, <span class=\"string\">'Mailer'</span>);</div><div class=\"line\">$mail-&gt;addAddress(<span class=\"string\">'joe@example.net'</span>, <span class=\"string\">'Joe User'</span>);  <span class=\"comment\">// Add a recipient</span></div><div class=\"line\">$mail-&gt;addAddress(<span class=\"string\">'ellen@example.com'</span>);  <span class=\"comment\">// Name is optional</span></div><div class=\"line\">$mail-&gt;addReplyTo(<span class=\"string\">'info@example.com'</span>, <span class=\"string\">'Information'</span>);</div><div class=\"line\">$mail-&gt;addCC(<span class=\"string\">'cc@example.com'</span>);</div><div class=\"line\">$mail-&gt;addBCC(<span class=\"string\">'bcc@example.com'</span>);</div><div class=\"line\">   </div><div class=\"line\">$mail-&gt;addAttachment(<span class=\"string\">'/var/tmp/file.tar.gz'</span>);  <span class=\"comment\">// Add attachments</span></div><div class=\"line\">$mail-&gt;addAttachment(<span class=\"string\">'/tmp/image.jpg'</span>, <span class=\"string\">'new.jpg'</span>);  <span class=\"comment\">// Optional name</span></div><div class=\"line\">$mail-&gt;isHTML(<span class=\"keyword\">true</span>);  <span class=\"comment\">// Set email format to HTML</span></div><div class=\"line\">$mail-&gt;Subject = <span class=\"string\">'Here is the subject'</span>;</div><div class=\"line\">$mail-&gt;Body    = <span class=\"string\">'This is the HTML message body &lt;b&gt;in bold!&lt;/b&gt;'</span>;</div><div class=\"line\">$mail-&gt;AltBody = <span class=\"string\">'This is the body in plain text for non-HTML mail clients'</span>;</div><div class=\"line\"><span class=\"keyword\">if</span>(!$mail-&gt;send()) &#123;</div><div class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">'Message could not be sent.'</span>;</div><div class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">'Mailer Error: '</span> . $mail-&gt;ErrorInfo;</div><div class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">'Message has been sent'</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>在 PHPMailer 文件夹下，新建一个 index.php 文件，复制粘贴以上代码，修改各项配置</p>\n<p><img src=\"http://img.blog.csdn.net/20170311162934199?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvemhvdXhpYW9mZWkxOTk2/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"这里写图片描述\"></p>\n<p>由于使用了SSL连接，所以需要开启PHP的 openssl 扩展，这里不再赘述，配置完之后，放在 Web 服务器下，访问 index.php，正常的话，就能收到一封测试邮件了，如果失败，可以根据报错信息进行排查。</p>\n<h3 id=\"最小化安装-推荐\"><a href=\"#最小化安装-推荐\" class=\"headerlink\" title=\"最小化安装(推荐)\"></a><strong>最小化安装(推荐)</strong></h3><p>直接把整个 PHPMailer 项目放到服务器上，未免太浪费空间，而且项目中的许多文件都是没用的，所以 README 文件中也提到了最小化安装<br><img src=\"http://img.blog.csdn.net/20170311164154835?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvemhvdXhpYW9mZWkxOTk2/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"这里写图片描述\"><br>文中提到 <strong>class.phpmailer.php</strong> 是必需的，另外的文件是可选的，因为我们使用的是 SMTP，所以还需要<strong>class.smtp.php</strong>，如果你使用了 POP3，则需要引入 <strong>class.pop3.php</strong>，新建一个 Mail 文件夹，导入以上两个文件，新建 index.html,send.php，文件结构如下:<br><img src=\"http://img.blog.csdn.net/20170311165709198?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvemhvdXhpYW9mZWkxOTk2/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"这里写图片描述\"><br>两个文件代码如下</p>\n<p>index.html<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"zh-CN\"</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>phpmailer Unit Test<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span>phpmailer Unit Test<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></div><div class=\"line\">\t请你输入<span class=\"tag\">&lt;<span class=\"name\">font</span> <span class=\"attr\">color</span>=<span class=\"string\">\"#FF6666\"</span>&gt;</span>收信<span class=\"tag\">&lt;/<span class=\"name\">font</span>&gt;</span>的邮箱地址:</div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">name</span>=<span class=\"string\">\"phpmailer\"</span> <span class=\"attr\">action</span>=<span class=\"string\">\"./send.php\"</span> <span class=\"attr\">method</span>=<span class=\"string\">\"post\"</span>&gt;</span></div><div class=\"line\">\t邮箱地址: <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">size</span>=<span class=\"string\">\"50\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"address\"</span> /&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">br</span>/&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"submit\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"发送\"</span>/&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<p>send.php<br><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&lt;?php</span></div><div class=\"line\">\t<span class=\"keyword\">require</span>(<span class=\"string\">\"class.phpmailer.php\"</span>);  <span class=\"comment\">//下载的文件必须放在该文件所在目录</span></div><div class=\"line\">\t<span class=\"keyword\">require</span>(<span class=\"string\">\"class.smtp.php\"</span>);</div><div class=\"line\">\t$mail = <span class=\"keyword\">new</span> PHPMailer();  <span class=\"comment\">//建立邮件发送类</span></div><div class=\"line\">\t$address = $_POST[<span class=\"string\">'address'</span>];</div><div class=\"line\">\t$mail-&gt;IsSMTP();  <span class=\"comment\">// 使用SMTP方式发送</span></div><div class=\"line\">\t$mail-&gt;CharSet=<span class=\"string\">'UTF-8'</span>;  <span class=\"comment\">// 设置邮件的字符编码</span></div><div class=\"line\">\t$mail-&gt;Host = <span class=\"string\">\"smtp.qq.com\"</span>;  <span class=\"comment\">// 您的企业邮局域名</span></div><div class=\"line\">\t$mail-&gt;SMTPAuth = <span class=\"keyword\">true</span>;  <span class=\"comment\">// 启用SMTP验证功能</span></div><div class=\"line\">\t$mail-&gt;SMTPSecure = <span class=\"string\">\"ssl\"</span>;</div><div class=\"line\">\t$mail-&gt;Port = <span class=\"string\">\"465\"</span>;  <span class=\"comment\">//SMTP端口</span></div><div class=\"line\">\t$mail-&gt;Username = <span class=\"string\">\"xxx@qq.com\"</span>;  <span class=\"comment\">// 邮箱用户名(请填写完整的email地址)</span></div><div class=\"line\">\t$mail-&gt;Password = <span class=\"string\">\"xxx\"</span>;  <span class=\"comment\">// 授权码</span></div><div class=\"line\">\t$mail-&gt;From = <span class=\"string\">\"xxx@qq.com\"</span>;  <span class=\"comment\">//邮件发送者email地址</span></div><div class=\"line\">\t$mail-&gt;FromName = <span class=\"string\">\"您的名称\"</span>;</div><div class=\"line\">\t$mail-&gt;AddAddress(<span class=\"string\">\"$address\"</span>, <span class=\"string\">\"\"</span>);  <span class=\"comment\">//收件人地址(\"收件人email\",\"收件人姓名\")</span></div><div class=\"line\">\t$mail-&gt;AddReplyTo(<span class=\"string\">\"\"</span>, <span class=\"string\">\"\"</span>);</div><div class=\"line\">\t$mail-&gt;AddAttachment(<span class=\"string\">\"/var/tmp/file.tar.gz\"</span>);   <span class=\"comment\">// 添加附件</span></div><div class=\"line\">\t$mail-&gt;IsHTML(<span class=\"keyword\">true</span>);   <span class=\"comment\">// set email format to HTML //是否使用HTML格式</span></div><div class=\"line\">\t$mail-&gt;Subject = <span class=\"string\">\"PHPMailer测试邮件\"</span>;  <span class=\"comment\">//邮件标题</span></div><div class=\"line\">\t$mail-&gt;Body = <span class=\"string\">\"Hello,这是测试邮件\"</span>;  <span class=\"comment\">//邮件内容</span></div><div class=\"line\">\t$mail-&gt;AltBody = <span class=\"string\">\"This is the body in plain text for non-HTML mail clients\"</span>;  <span class=\"comment\">//附加信息</span></div><div class=\"line\">\t<span class=\"keyword\">if</span>(!$mail-&gt;Send())&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">echo</span> <span class=\"string\">\"邮件发送失败. &lt;p&gt;\"</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">echo</span> <span class=\"string\">\"错误原因: \"</span> . $mail-&gt;ErrorInfo;</div><div class=\"line\">\t\t<span class=\"keyword\">exit</span>;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">echo</span> <span class=\"string\">\"邮件发送成功\"</span>;</div><div class=\"line\">\t<span class=\"meta\">?&gt;</span></div></pre></td></tr></table></figure></p>\n<p>配置参数和上面的一样，不再赘述，之后点击 index.html 文件<br><img src=\"http://img.blog.csdn.net/20170312145914924?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvemhvdXhpYW9mZWkxOTk2/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"这里写图片描述\"><br>输入邮箱地址就可以啦<br><img src=\"http://img.blog.csdn.net/20170312145935463?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvemhvdXhpYW9mZWkxOTk2/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"这里写图片描述\"><br><img src=\"http://img.blog.csdn.net/20170312150010401?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvemhvdXhpYW9mZWkxOTk2/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"这里写图片描述\"></p>\n<p><strong>以上代码均为测试，若用于生产环境，可以对其进行封装</strong><br><strong>如有问题，欢迎回复交流</strong><br><br><br></p>\n","categories":["后端"],"tags":["PHP"]},{"title":"关于本博客","url":"http://mrzhouxiaofei.com/2017/01/05/关于本博客/","content":"<h2 id=\"关于本博客\"><a href=\"#关于本博客\" class=\"headerlink\" title=\"关于本博客\"></a>关于本博客</h2><p>想要搭建自己的个人博客也有一段时间了，之前考核做了个人博客，后来买空间，买域名，把例子也放了上去，但那个做的实在粗糙，拿不出手，放上去一段时间，就撤下来了。</p>\n<p>之前重写博客，但是没有做好规划，后端写了一部分，去写前端，发现页面写的太丑，对于一个追求完美的人来说，真的不能接受，如此，就搁置了一段时间。而且我搭建个人博客的初衷是记录自己的学习和生活，当然如果能对别人有一些帮助，那就更好了，一直在搭建博客上钻研，这就显得本末倒置了。</p>\n<p>后来几个小伙伴用 <strong>WordPress</strong> 搭建了博客，看着效果还不错，就去试用了一段时间，不过越用越感觉它太重了，很多的功能都用不到，我只是想安安静静的写博客啊。无奈，放弃。</p>\n<p>经常在网上搜索问题，也常看别人的博客，发现很多人的博客都放在 <strong>GitHub</strong> 上，效果很好，页面也很简洁。了解一下，知道了 <strong>GitHub Pages</strong>，顿时感觉这就是我想要的，马上摸索，又知道了博客搭建工具 <strong>Hexo</strong>， 然后很快搭建了自己的博客。</p>\n<p>使用 <strong>Hexo</strong> 最大的好处，就是你不用去关注太多东西，只需专注博客的内容就好了，简单配置下，就可以使用，而且不用像之前一样去买云服务器。如果感觉不喜欢 <strong>username.github.io</strong> ，买个逼格高的域名解析一下就行了。</p>\n<p>另外，<strong>Hexo</strong> 提供了很多主题，如果不喜欢，随时可以换。秉持着 <strong>Simple is the best</strong> 的原则，选择了现在的主题，喜欢的，可以在这里 <a href=\"https://github.com/forsigner/fexo\" target=\"_blank\" rel=\"external\">forsigner</a> 找到主题原作者。 </p>\n<p>博客搭建完成了，以后的博客都会同步更新到这里，欢迎交流！<br><br><br></p>\n","categories":["随笔"],"tags":["随笔"]},{"title":"about","url":"http://mrzhouxiaofei.com/about/index.html","content":"","categories":[],"tags":[]},{"title":"category","url":"http://mrzhouxiaofei.com/category/index.html","content":"","categories":[],"tags":[]},{"title":"search","url":"http://mrzhouxiaofei.com/search/index.html","content":"","categories":[],"tags":[]},{"title":"tag","url":"http://mrzhouxiaofei.com/tag/index.html","content":"","categories":[],"tags":[]}]